{"version":3,"sources":["components/HelperComponents.js","components/ImgCoordinates.js","components/VideoCoordinates.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["size","OverLayGrid","props","style","width","height","position","left","top","onMouseMove","x1","y1","x2","y2","display","grid","stroke","strokeWidth","x","guidelines","y","CoordinateText","coordinate","hd_constant_x","hd_constant_y","Math","round","_translateCoordinates","className","backgroundColor","color","ImageBox","state","handleMouseMove","bind","event","clientX","clientY","rect","this","image","getBoundingClientRect","setState","Fragment","ref","heigt","objectFit","src","imgsrc","alt","flexDirection","justifyContent","padding","Component","InputImage","htmlFor","id","name","type","accept","onChange","handleImageInput","ImgCoordinate","handleGLCheckBox","handleGridCheckBox","cb","target","checked","input","reader","FileReader","onloadend","dataURL","result","file","files","match","readAsDataURL","marginLeft","VideoBox","pause","handlePlayPause","video","play","controlBtn","controlIcon","icon","faPlay","faPause","videosrc","autoPlay","disabled","videoloaded","onClick","InputVideo","handleVideoInput","VideoCoordinate","MainComponent","handleImageClick","handleVideoClick","_display","faImage","faVideo","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a95e0912.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst size = [1280,720];\r\n\r\nconst _translateCoordinates = (x, y) => {\r\n    let hd_constant_x = 960/(size[0]/ 2), hd_constant_y = 540/(size[1]/2)\r\n    x = x-size[0]/2;\r\n    y = 0 - (y-size[1]/2)\r\n    x = Math.round(hd_constant_x*x);\r\n    y = Math.round(hd_constant_y*y);\r\n    return {x, y};\r\n}\r\n\r\nexport const OverLayGrid = (props) => {\r\n    const customStyle = {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: 0,\r\n    }\r\n    return(\r\n        <div style={customStyle} onMouseMove={props.onMouseMove}>\r\n            <svg height=\"100%\" width=\"100%\">\r\n                <line x1=\"50%\" y1=\"0\" x2=\"50%\" y2=\"100%\" style={{display: props.grid? \"block\" : \"none\", stroke:\"rgb(255,255,0)\", strokeWidth:2}} />\r\n                <line x1=\"0\" y1=\"50%\" x2=\"100%\" y2=\"50%\" style={{display: props.grid? \"block\" : \"none\", stroke:\"rgb(255,255,0)\", strokeWidth:2}} />\r\n                <line x1={props.x} y1=\"0\" x2={props.x} y2=\"100%\" style={{display: props.guidelines? \"block\":\"none\", stroke:\"rgb(255,153,51)\", strokeWidth:2}} />\r\n                <line x1=\"0\" y1={props.y} x2=\"100%\" y2={props.y} style={{display: props.guidelines? \"block\":\"none\", stroke:\"rgb(255,153,51)\", strokeWidth:2}} />\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const CoordinateText = (props) => {\r\n    let coordinate = _translateCoordinates( props.x, props.y);\r\n    return(\r\n        <div className=\"text\" style={{backgroundColor:'black', color:'white'}}>\r\n            [{coordinate.x}, {coordinate.y}]\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport { OverLayGrid, CoordinateText } from './HelperComponents';\r\n\r\nconst SAMPLE_IMG = \"assets/image.jpg\";\r\n\r\nclass ImageBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    }\r\n\r\n    handleMouseMove(event) {\r\n        let x = event.clientX, y = event.clientY;\r\n        const rect = this.image.getBoundingClientRect();\r\n        this.setState( {\r\n            x: x - rect.left,\r\n            y: y - rect.top,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const customstyle = {\r\n            width: '100%',\r\n            heigt: '100%',\r\n            objectFit: 'contain',\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"box\">\r\n                    <img ref={image => this.image = image} style={customstyle} src={this.props.imgsrc} alt=\"\"/>\r\n                    <OverLayGrid onMouseMove={this.handleMouseMove} grid={this.props.grid} guidelines={this.props.guidelines} x={this.state.x} y={this.state.y}/>         \r\n                </div>\r\n                <div style={{display:'flex', flexDirection:'row', justifyContent:'space-between', width: 1280, backgroundColor: 'black', padding:5}}>\r\n                    <CoordinateText x={this.state.x} y={this.state.y}/> \r\n                </div> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst InputImage = (props) => {\r\n    return(\r\n        <div>\r\n            <label className=\"textSmall\" htmlFor='getFile'>Open an Image </label>\r\n            <input  className=\"textSmall\" id='getfile' name='getfile' type='file' accept='image/*' onChange={props.handleImageInput}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nclass ImgCoordinate extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imgsrc: SAMPLE_IMG,\r\n            x: 0,\r\n            y: 0,\r\n            grid: false,\r\n            guidelines: false,\r\n        }\r\n        this.handleGLCheckBox = this.handleGLCheckBox.bind(this);\r\n        this.handleGridCheckBox = this.handleGridCheckBox.bind(this)\r\n        this.handleImageInput = this.handleImageInput.bind(this);\r\n    }\r\n\r\n    handleGridCheckBox(event) {\r\n        var cb = event.target;\r\n        this.setState({\r\n            grid: cb.checked,\r\n        })\r\n    }\r\n\r\n    handleGLCheckBox(event) {\r\n        var cb = event.target;\r\n        this.setState({\r\n            guidelines: cb.checked,\r\n        })\r\n    }\r\n\r\n   \r\n    handleImageInput(event) {\r\n        var input = event.target;\r\n        var reader = new FileReader();\r\n        reader.onloadend = function(){\r\n            var dataURL = reader.result;\r\n            this.setState({\r\n                imgsrc: dataURL, \r\n            });\r\n        }.bind(this);\r\n        var file = input.files[0];\r\n        if (file && file.type.match('image.*')) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='base'>\r\n                <div style={{display: 'flex', flexDirection:'row', padding:'20px', justifyContent:'space-between'}}>\r\n                    <InputImage handleImageInput={this.handleImageInput} />\r\n                    <div style={{display:'flex'}}>\r\n                        <div className=\"textSmall\" style={{marginLeft:20}}>\r\n                            <label htmlFor=\"grid\">Grid: </label>\r\n                            <input type=\"checkbox\" id=\"grid\" onChange={this.handleGridCheckBox}></input>\r\n                        </div>\r\n                        <div className=\"textSmall\" style={{marginLeft:20}}>\r\n                            <label htmlFor=\"guidelines\">Guide Lines: </label>\r\n                            <input type=\"checkbox\" id=\"guidelines\" onChange={this.handleGLCheckBox}></input>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n                <ImageBox imgsrc={this.state.imgsrc} grid={this.state.grid} guidelines={this.state.guidelines}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ImgCoordinate;","import React, {Component} from 'react';\r\nimport { OverLayGrid, CoordinateText } from './HelperComponents';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SAMPLE_VIDEO = \"\";\r\n\r\nclass VideoBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            x: 0,\r\n            y: 0,\r\n            pause: false,\r\n        }\r\n        this.handlePlayPause = this.handlePlayPause.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    }\r\n\r\n    handlePlayPause(event) {\r\n        this.state.pause? this.video.play(): this.video.pause();\r\n        this.setState({\r\n            pause: !this.state.pause,\r\n        })\r\n    }\r\n\r\n    handleMouseMove(event) {\r\n        let x = event.clientX, y = event.clientY;\r\n        const rect = this.video.getBoundingClientRect();\r\n        this.setState( {\r\n            x: x - rect.left,\r\n            y: y - rect.top,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const customstyle = {\r\n            objectFit: 'contain',\r\n        }\r\n\r\n        const controlBtn = this.state.pause?\"PLAY\":\"PAUSE\";\r\n        const controlIcon = this.state.pause?<FontAwesomeIcon icon={faPlay} /> : <FontAwesomeIcon icon={faPause} />;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"box\">\r\n                    <video ref={video => this.video = video} width=\"100%\" height=\"100%\" style={customstyle} src={this.props.videosrc} autoPlay/>\r\n                    <OverLayGrid onMouseMove={this.handleMouseMove} grid={this.props.grid} guidelines={this.props.guidelines} x={this.state.x} y={this.state.y}/>         \r\n                </div>\r\n                <div style={{display:'flex', flexDirection:'row', justifyContent:'space-between', width: 1280, backgroundColor: 'black', padding:5}}>\r\n                    <CoordinateText x={this.state.x} y={this.state.y}/> \r\n        <button className=\"textSmall menuBtn\" disabled={!this.props.videoloaded} onClick={this.handlePlayPause}>{controlBtn} {controlIcon}</button>\r\n                </div> \r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst InputVideo = (props) => {\r\n    return(\r\n        <div>\r\n            <label className=\"textSmall\" htmlFor='getFile'>Open a video file </label>\r\n            <input className=\"textSmall\" id='getfile' name='getfile' type='file' accept='video/*' onChange={props.handleVideoInput}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nclass VideoCoordinate extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            videosrc: SAMPLE_VIDEO,\r\n            x: 0,\r\n            y: 0,\r\n            grid: false,\r\n            guidelines: false,\r\n            videoloaded: false,\r\n        }\r\n        this.handleGLCheckBox = this.handleGLCheckBox.bind(this);\r\n        this.handleGridCheckBox = this.handleGridCheckBox.bind(this)\r\n        this.handleVideoInput = this.handleVideoInput.bind(this);\r\n    }\r\n\r\n    handleGridCheckBox(event) {\r\n        var cb = event.target;\r\n        this.setState({\r\n            grid: cb.checked,\r\n        })\r\n    }\r\n\r\n    handleGLCheckBox(event) {\r\n        var cb = event.target;\r\n        this.setState({\r\n            guidelines: cb.checked,\r\n        })\r\n    }\r\n\r\n   \r\n    handleVideoInput(event) {\r\n        var input = event.target;\r\n        var reader = new FileReader();\r\n        reader.onloadend = function(){\r\n            var dataURL = reader.result;\r\n            this.setState({\r\n                videosrc: dataURL,\r\n                videoloaded: true\r\n            });\r\n        }.bind(this);\r\n        var file = input.files[0];\r\n        if (file && file.type.match('video.*')) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='base'>\r\n                <div style={{display: 'flex', flexDirection:'row', padding:'20px', justifyContent:'space-between'}}>\r\n                    <InputVideo handleVideoInput={this.handleVideoInput} />\r\n                    <div style={{display:'flex'}}>\r\n                        <div className=\"textSmall\" style={{marginLeft:20}}>\r\n                            <label htmlFor=\"grid\">Grid: </label>\r\n                            <input type=\"checkbox\" id=\"grid\" onChange={this.handleGridCheckBox}></input>\r\n                        </div>\r\n                        <div className=\"textSmall\" style={{marginLeft:20}}>\r\n                            <label htmlFor=\"guidelines\">Guide Lines: </label>\r\n                            <input type=\"checkbox\" id=\"guidelines\" onChange={this.handleGLCheckBox}></input>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n                <VideoBox videosrc={this.state.videosrc} videoloaded={this.state.videoloaded} grid={this.state.grid} guidelines={this.state.guidelines}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default VideoCoordinate;","import React, { Component } from 'react';\r\nimport ImgCoordinate from './ImgCoordinates';\r\nimport VideoCoordinate from './VideoCoordinates';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faImage, faVideo } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nclass MainComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: true,\r\n        }\r\n        this.handleImageClick = this.handleImageClick.bind(this);\r\n        this.handleVideoClick = this.handleVideoClick.bind(this);\r\n    }\r\n\r\n\r\n    handleImageClick() {\r\n        this.setState({\r\n            image: true,\r\n        });\r\n    }\r\n\r\n    handleVideoClick() {\r\n        this.setState({\r\n            image: false,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const _display = this.state.image?<ImgCoordinate />: <VideoCoordinate />;\r\n        return(\r\n            <div className=\"base\">  \r\n                <button className=\"text menuBtn\"  disabled={this.state.image} onClick={this.handleImageClick}>Image <FontAwesomeIcon icon={faImage}/> </button>\r\n                <button className=\"text menuBtn\" disabled={!this.state.image} onClick={this.handleVideoClick}>Video <FontAwesomeIcon icon={faVideo}/></button>\r\n                {_display}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainComponent;","import React from 'react';\nimport './App.css';\nimport MainComponent from './components/MainComponent';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComponent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}